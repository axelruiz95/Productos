//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SellingWS.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class SellingEntities : DbContext
    {
        public SellingEntities()
            : base("name=SellingEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Almacen> Almacen { get; set; }
        public DbSet<Area> Area { get; set; }
        public DbSet<Autorizacion> Autorizacion { get; set; }
        public DbSet<Clasificacion> Clasificacion { get; set; }
        public DbSet<ClasProd> ClasProd { get; set; }
        public DbSet<Cliente> Cliente { get; set; }
        public DbSet<Compania> Compania { get; set; }
        public DbSet<CompanyParam> CompanyParam { get; set; }
        public DbSet<DevCompra> DevCompra { get; set; }
        public DbSet<Estrategia> Estrategia { get; set; }
        public DbSet<Estructura> Estructura { get; set; }
        public DbSet<Existencia> Existencia { get; set; }
        public DbSet<Hueco> Hueco { get; set; }
        public DbSet<InterfazSalida> InterfazSalida { get; set; }
        public DbSet<MOVALM> MOVALM { get; set; }
        public DbSet<MovUbc> MovUbc { get; set; }
        public DbSet<Orden> Orden { get; set; }
        public DbSet<OrdenDetalle> OrdenDetalle { get; set; }
        public DbSet<Picking> Picking { get; set; }
        public DbSet<prd_exist_uba> prd_exist_uba { get; set; }
        public DbSet<Producto> Producto { get; set; }
        public DbSet<ProductoUnidad> ProductoUnidad { get; set; }
        public DbSet<Proveedor> Proveedor { get; set; }
        public DbSet<ReciboAlmacen> ReciboAlmacen { get; set; }
        public DbSet<ReciboAlmacenD> ReciboAlmacenD { get; set; }
        public DbSet<ReciboAlmacenT> ReciboAlmacenT { get; set; }
        public DbSet<ReciboSobrante> ReciboSobrante { get; set; }
        public DbSet<Sucursal> Sucursal { get; set; }
        public DbSet<SucursalProducto> SucursalProducto { get; set; }
        public DbSet<Surtido> Surtido { get; set; }
        public DbSet<SurtidoDetalle> SurtidoDetalle { get; set; }
        public DbSet<Tokens> Tokens { get; set; }
        public DbSet<Traslado> Traslado { get; set; }
        public DbSet<TrasladoDetalle> TrasladoDetalle { get; set; }
        public DbSet<Ubicacion> Ubicacion { get; set; }
        public DbSet<Unidad> Unidad { get; set; }
        public DbSet<Usuario> Usuario { get; set; }
        public DbSet<ValorRef> ValorRef { get; set; }
        public DbSet<Venta> Venta { get; set; }
    
        public virtual ObjectResult<st_recupera_interfaz_Result> st_recupera_interfaz(string interfaz, string cOMClave)
        {
            var interfazParameter = interfaz != null ?
                new ObjectParameter("Interfaz", interfaz) :
                new ObjectParameter("Interfaz", typeof(string));
    
            var cOMClaveParameter = cOMClave != null ?
                new ObjectParameter("COMClave", cOMClave) :
                new ObjectParameter("COMClave", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<st_recupera_interfaz_Result>("st_recupera_interfaz", interfazParameter, cOMClaveParameter);
        }
    }
}
