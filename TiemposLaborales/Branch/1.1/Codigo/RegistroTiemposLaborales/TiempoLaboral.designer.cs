#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión del motor en tiempo de ejecución:2.0.50727.4206
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RegistroTiemposLaborales
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="TiemposLaborales")]
	public partial class TiempoLaboralDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertJornadaLaboral(JornadaLaboral instance);
    partial void UpdateJornadaLaboral(JornadaLaboral instance);
    partial void DeleteJornadaLaboral(JornadaLaboral instance);
    partial void InsertValorReferencia(ValorReferencia instance);
    partial void UpdateValorReferencia(ValorReferencia instance);
    partial void DeleteValorReferencia(ValorReferencia instance);
    partial void InsertAreaActividad(AreaActividad instance);
    partial void UpdateAreaActividad(AreaActividad instance);
    partial void DeleteAreaActividad(AreaActividad instance);
    partial void InsertRegistroTiempos(RegistroTiempos instance);
    partial void UpdateRegistroTiempos(RegistroTiempos instance);
    partial void DeleteRegistroTiempos(RegistroTiempos instance);
    partial void InsertPermisoUsuario(PermisoUsuario instance);
    partial void UpdatePermisoUsuario(PermisoUsuario instance);
    partial void DeletePermisoUsuario(PermisoUsuario instance);
    partial void InsertCostoUsuarioHora(CostoUsuarioHora instance);
    partial void UpdateCostoUsuarioHora(CostoUsuarioHora instance);
    partial void DeleteCostoUsuarioHora(CostoUsuarioHora instance);
    #endregion
		
		public TiempoLaboralDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["TiemposLaboralesConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public TiempoLaboralDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TiempoLaboralDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TiempoLaboralDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TiempoLaboralDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<JornadaLaboral> JornadaLaboral
		{
			get
			{
				return this.GetTable<JornadaLaboral>();
			}
		}
		
		public System.Data.Linq.Table<ValorReferencia> ValorReferencia
		{
			get
			{
				return this.GetTable<ValorReferencia>();
			}
		}
		
		public System.Data.Linq.Table<AreaActividad> AreaActividad
		{
			get
			{
				return this.GetTable<AreaActividad>();
			}
		}
		
		public System.Data.Linq.Table<RegistroTiempos> RegistroTiempos
		{
			get
			{
				return this.GetTable<RegistroTiempos>();
			}
		}
		
		public System.Data.Linq.Table<PermisoUsuario> PermisoUsuario
		{
			get
			{
				return this.GetTable<PermisoUsuario>();
			}
		}
		
		public System.Data.Linq.Table<CostoUsuarioHora> CostoUsuarioHora
		{
			get
			{
				return this.GetTable<CostoUsuarioHora>();
			}
		}
	}
	
	[Table(Name="dbo.JornadaLaboral")]
	public partial class JornadaLaboral : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.DateTime _FechaInicioJornada;
		
		private string _Usuario;
		
		private EntitySet<RegistroTiempos> _RegistroTiempos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFechaInicioJornadaChanging(System.DateTime value);
    partial void OnFechaInicioJornadaChanged();
    partial void OnUsuarioChanging(string value);
    partial void OnUsuarioChanged();
    #endregion
		
		public JornadaLaboral()
		{
			this._RegistroTiempos = new EntitySet<RegistroTiempos>(new Action<RegistroTiempos>(this.attach_RegistroTiempos), new Action<RegistroTiempos>(this.detach_RegistroTiempos));
			OnCreated();
		}
		
		[Column(Storage="_FechaInicioJornada", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime FechaInicioJornada
		{
			get
			{
				return this._FechaInicioJornada;
			}
			set
			{
				if ((this._FechaInicioJornada != value))
				{
					this.OnFechaInicioJornadaChanging(value);
					this.SendPropertyChanging();
					this._FechaInicioJornada = value;
					this.SendPropertyChanged("FechaInicioJornada");
					this.OnFechaInicioJornadaChanged();
				}
			}
		}
		
		[Column(Storage="_Usuario", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				if ((this._Usuario != value))
				{
					this.OnUsuarioChanging(value);
					this.SendPropertyChanging();
					this._Usuario = value;
					this.SendPropertyChanged("Usuario");
					this.OnUsuarioChanged();
				}
			}
		}
		
		[Association(Name="JornadaLaboral_RegistroTiempos", Storage="_RegistroTiempos", ThisKey="FechaInicioJornada", OtherKey="FechaInicioJornada")]
		public EntitySet<RegistroTiempos> RegistroTiempos
		{
			get
			{
				return this._RegistroTiempos;
			}
			set
			{
				this._RegistroTiempos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RegistroTiempos(RegistroTiempos entity)
		{
			this.SendPropertyChanging();
			entity.JornadaLaboral = this;
		}
		
		private void detach_RegistroTiempos(RegistroTiempos entity)
		{
			this.SendPropertyChanging();
			entity.JornadaLaboral = null;
		}
	}
	
	[Table(Name="dbo.ValorReferencia")]
	public partial class ValorReferencia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Clave;
		
		private string _Codigo;
		
		private string _Descripcion;
		
		private EntitySet<AreaActividad> _AreaActividad;
		
		private EntitySet<AreaActividad> _AreaActividad1;
		
		private EntitySet<RegistroTiempos> _RegistroTiempos;
		
		private EntitySet<RegistroTiempos> _RegistroTiempos1;
		
		private EntitySet<RegistroTiempos> _RegistroTiempos2;
		
		private EntitySet<RegistroTiempos> _RegistroTiempos3;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClaveChanging(System.Guid value);
    partial void OnClaveChanged();
    partial void OnCodigoChanging(string value);
    partial void OnCodigoChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public ValorReferencia()
		{
			this._AreaActividad = new EntitySet<AreaActividad>(new Action<AreaActividad>(this.attach_AreaActividad), new Action<AreaActividad>(this.detach_AreaActividad));
			this._AreaActividad1 = new EntitySet<AreaActividad>(new Action<AreaActividad>(this.attach_AreaActividad1), new Action<AreaActividad>(this.detach_AreaActividad1));
			this._RegistroTiempos = new EntitySet<RegistroTiempos>(new Action<RegistroTiempos>(this.attach_RegistroTiempos), new Action<RegistroTiempos>(this.detach_RegistroTiempos));
			this._RegistroTiempos1 = new EntitySet<RegistroTiempos>(new Action<RegistroTiempos>(this.attach_RegistroTiempos1), new Action<RegistroTiempos>(this.detach_RegistroTiempos1));
			this._RegistroTiempos2 = new EntitySet<RegistroTiempos>(new Action<RegistroTiempos>(this.attach_RegistroTiempos2), new Action<RegistroTiempos>(this.detach_RegistroTiempos2));
			this._RegistroTiempos3 = new EntitySet<RegistroTiempos>(new Action<RegistroTiempos>(this.attach_RegistroTiempos3), new Action<RegistroTiempos>(this.detach_RegistroTiempos3));
			OnCreated();
		}
		
		[Column(Storage="_Clave", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Clave
		{
			get
			{
				return this._Clave;
			}
			set
			{
				if ((this._Clave != value))
				{
					this.OnClaveChanging(value);
					this.SendPropertyChanging();
					this._Clave = value;
					this.SendPropertyChanged("Clave");
					this.OnClaveChanged();
				}
			}
		}
		
		[Column(Storage="_Codigo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Codigo
		{
			get
			{
				return this._Codigo;
			}
			set
			{
				if ((this._Codigo != value))
				{
					this.OnCodigoChanging(value);
					this.SendPropertyChanging();
					this._Codigo = value;
					this.SendPropertyChanged("Codigo");
					this.OnCodigoChanged();
				}
			}
		}
		
		[Column(Storage="_Descripcion", DbType="VarChar(100)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[Association(Name="ValorReferencia_AreaActividad", Storage="_AreaActividad", ThisKey="Clave", OtherKey="Area")]
		public EntitySet<AreaActividad> AreaActividad
		{
			get
			{
				return this._AreaActividad;
			}
			set
			{
				this._AreaActividad.Assign(value);
			}
		}
		
		[Association(Name="ValorReferencia_AreaActividad1", Storage="_AreaActividad1", ThisKey="Clave", OtherKey="Actividad")]
		public EntitySet<AreaActividad> AreaActividad1
		{
			get
			{
				return this._AreaActividad1;
			}
			set
			{
				this._AreaActividad1.Assign(value);
			}
		}
		
		[Association(Name="ValorReferencia_RegistroTiempos", Storage="_RegistroTiempos", ThisKey="Clave", OtherKey="Cliente")]
		public EntitySet<RegistroTiempos> RegistroTiempos
		{
			get
			{
				return this._RegistroTiempos;
			}
			set
			{
				this._RegistroTiempos.Assign(value);
			}
		}
		
		[Association(Name="ValorReferencia_RegistroTiempos1", Storage="_RegistroTiempos1", ThisKey="Clave", OtherKey="Proyecto")]
		public EntitySet<RegistroTiempos> RegistroTiempos1
		{
			get
			{
				return this._RegistroTiempos1;
			}
			set
			{
				this._RegistroTiempos1.Assign(value);
			}
		}
		
		[Association(Name="ValorReferencia_RegistroTiempos2", Storage="_RegistroTiempos2", ThisKey="Clave", OtherKey="Actividad")]
		public EntitySet<RegistroTiempos> RegistroTiempos2
		{
			get
			{
				return this._RegistroTiempos2;
			}
			set
			{
				this._RegistroTiempos2.Assign(value);
			}
		}
		
		[Association(Name="ValorReferencia_RegistroTiempos3", Storage="_RegistroTiempos3", ThisKey="Clave", OtherKey="Area")]
		public EntitySet<RegistroTiempos> RegistroTiempos3
		{
			get
			{
				return this._RegistroTiempos3;
			}
			set
			{
				this._RegistroTiempos3.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AreaActividad(AreaActividad entity)
		{
			this.SendPropertyChanging();
			entity.ValorReferencia = this;
		}
		
		private void detach_AreaActividad(AreaActividad entity)
		{
			this.SendPropertyChanging();
			entity.ValorReferencia = null;
		}
		
		private void attach_AreaActividad1(AreaActividad entity)
		{
			this.SendPropertyChanging();
			entity.ValorReferencia1 = this;
		}
		
		private void detach_AreaActividad1(AreaActividad entity)
		{
			this.SendPropertyChanging();
			entity.ValorReferencia1 = null;
		}
		
		private void attach_RegistroTiempos(RegistroTiempos entity)
		{
			this.SendPropertyChanging();
			entity.ValorReferencia = this;
		}
		
		private void detach_RegistroTiempos(RegistroTiempos entity)
		{
			this.SendPropertyChanging();
			entity.ValorReferencia = null;
		}
		
		private void attach_RegistroTiempos1(RegistroTiempos entity)
		{
			this.SendPropertyChanging();
			entity.ValorReferencia1 = this;
		}
		
		private void detach_RegistroTiempos1(RegistroTiempos entity)
		{
			this.SendPropertyChanging();
			entity.ValorReferencia1 = null;
		}
		
		private void attach_RegistroTiempos2(RegistroTiempos entity)
		{
			this.SendPropertyChanging();
			entity.ValorReferencia2 = this;
		}
		
		private void detach_RegistroTiempos2(RegistroTiempos entity)
		{
			this.SendPropertyChanging();
			entity.ValorReferencia2 = null;
		}
		
		private void attach_RegistroTiempos3(RegistroTiempos entity)
		{
			this.SendPropertyChanging();
			entity.ValorReferencia3 = this;
		}
		
		private void detach_RegistroTiempos3(RegistroTiempos entity)
		{
			this.SendPropertyChanging();
			entity.ValorReferencia3 = null;
		}
	}
	
	[Table(Name="dbo.AreaActividad")]
	public partial class AreaActividad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Area;
		
		private System.Guid _Actividad;
		
		private EntityRef<ValorReferencia> _ValorReferencia;
		
		private EntityRef<ValorReferencia> _ValorReferencia1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAreaChanging(System.Guid value);
    partial void OnAreaChanged();
    partial void OnActividadChanging(System.Guid value);
    partial void OnActividadChanged();
    #endregion
		
		public AreaActividad()
		{
			this._ValorReferencia = default(EntityRef<ValorReferencia>);
			this._ValorReferencia1 = default(EntityRef<ValorReferencia>);
			OnCreated();
		}
		
		[Column(Storage="_Area", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Area
		{
			get
			{
				return this._Area;
			}
			set
			{
				if ((this._Area != value))
				{
					if (this._ValorReferencia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAreaChanging(value);
					this.SendPropertyChanging();
					this._Area = value;
					this.SendPropertyChanged("Area");
					this.OnAreaChanged();
				}
			}
		}
		
		[Column(Storage="_Actividad", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Actividad
		{
			get
			{
				return this._Actividad;
			}
			set
			{
				if ((this._Actividad != value))
				{
					if (this._ValorReferencia1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActividadChanging(value);
					this.SendPropertyChanging();
					this._Actividad = value;
					this.SendPropertyChanged("Actividad");
					this.OnActividadChanged();
				}
			}
		}
		
		[Association(Name="ValorReferencia_AreaActividad", Storage="_ValorReferencia", ThisKey="Area", OtherKey="Clave", IsForeignKey=true)]
		public ValorReferencia ValorReferencia
		{
			get
			{
				return this._ValorReferencia.Entity;
			}
			set
			{
				ValorReferencia previousValue = this._ValorReferencia.Entity;
				if (((previousValue != value) 
							|| (this._ValorReferencia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ValorReferencia.Entity = null;
						previousValue.AreaActividad.Remove(this);
					}
					this._ValorReferencia.Entity = value;
					if ((value != null))
					{
						value.AreaActividad.Add(this);
						this._Area = value.Clave;
					}
					else
					{
						this._Area = default(System.Guid);
					}
					this.SendPropertyChanged("ValorReferencia");
				}
			}
		}
		
		[Association(Name="ValorReferencia_AreaActividad1", Storage="_ValorReferencia1", ThisKey="Actividad", OtherKey="Clave", IsForeignKey=true)]
		public ValorReferencia ValorReferencia1
		{
			get
			{
				return this._ValorReferencia1.Entity;
			}
			set
			{
				ValorReferencia previousValue = this._ValorReferencia1.Entity;
				if (((previousValue != value) 
							|| (this._ValorReferencia1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ValorReferencia1.Entity = null;
						previousValue.AreaActividad1.Remove(this);
					}
					this._ValorReferencia1.Entity = value;
					if ((value != null))
					{
						value.AreaActividad1.Add(this);
						this._Actividad = value.Clave;
					}
					else
					{
						this._Actividad = default(System.Guid);
					}
					this.SendPropertyChanged("ValorReferencia1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.RegistroTiempos")]
	public partial class RegistroTiempos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Usuario;
		
		private System.DateTime _FechaHoraInicial;
		
		private System.DateTime _FechaInicioJornada;
		
		private System.Guid _Proyecto;
		
		private System.Nullable<System.Guid> _Cliente;
		
		private System.Nullable<System.Guid> _Actividad;
		
		private System.Nullable<System.Guid> _Area;
		
		private string _Descripcion;
		
		private double _Horas;
		
		private decimal _CostoTotal;
		
		private EntityRef<ValorReferencia> _ValorReferencia;
		
		private EntityRef<JornadaLaboral> _JornadaLaboral;
		
		private EntityRef<ValorReferencia> _ValorReferencia1;
		
		private EntityRef<ValorReferencia> _ValorReferencia2;
		
		private EntityRef<ValorReferencia> _ValorReferencia3;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsuarioChanging(string value);
    partial void OnUsuarioChanged();
    partial void OnFechaHoraInicialChanging(System.DateTime value);
    partial void OnFechaHoraInicialChanged();
    partial void OnFechaInicioJornadaChanging(System.DateTime value);
    partial void OnFechaInicioJornadaChanged();
    partial void OnProyectoChanging(System.Guid value);
    partial void OnProyectoChanged();
    partial void OnClienteChanging(System.Nullable<System.Guid> value);
    partial void OnClienteChanged();
    partial void OnActividadChanging(System.Nullable<System.Guid> value);
    partial void OnActividadChanged();
    partial void OnAreaChanging(System.Nullable<System.Guid> value);
    partial void OnAreaChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnHorasChanging(double value);
    partial void OnHorasChanged();
    partial void OnCostoTotalChanging(decimal value);
    partial void OnCostoTotalChanged();
    #endregion
		
		public RegistroTiempos()
		{
			this._ValorReferencia = default(EntityRef<ValorReferencia>);
			this._JornadaLaboral = default(EntityRef<JornadaLaboral>);
			this._ValorReferencia1 = default(EntityRef<ValorReferencia>);
			this._ValorReferencia2 = default(EntityRef<ValorReferencia>);
			this._ValorReferencia3 = default(EntityRef<ValorReferencia>);
			OnCreated();
		}
		
		[Column(Storage="_Usuario", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				if ((this._Usuario != value))
				{
					this.OnUsuarioChanging(value);
					this.SendPropertyChanging();
					this._Usuario = value;
					this.SendPropertyChanged("Usuario");
					this.OnUsuarioChanged();
				}
			}
		}
		
		[Column(Storage="_FechaHoraInicial", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime FechaHoraInicial
		{
			get
			{
				return this._FechaHoraInicial;
			}
			set
			{
				if ((this._FechaHoraInicial != value))
				{
					this.OnFechaHoraInicialChanging(value);
					this.SendPropertyChanging();
					this._FechaHoraInicial = value;
					this.SendPropertyChanged("FechaHoraInicial");
					this.OnFechaHoraInicialChanged();
				}
			}
		}
		
		[Column(Storage="_FechaInicioJornada", DbType="DateTime NOT NULL")]
		public System.DateTime FechaInicioJornada
		{
			get
			{
				return this._FechaInicioJornada;
			}
			set
			{
				if ((this._FechaInicioJornada != value))
				{
					if (this._JornadaLaboral.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFechaInicioJornadaChanging(value);
					this.SendPropertyChanging();
					this._FechaInicioJornada = value;
					this.SendPropertyChanged("FechaInicioJornada");
					this.OnFechaInicioJornadaChanged();
				}
			}
		}
		
		[Column(Storage="_Proyecto", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Proyecto
		{
			get
			{
				return this._Proyecto;
			}
			set
			{
				if ((this._Proyecto != value))
				{
					if (this._ValorReferencia1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProyectoChanging(value);
					this.SendPropertyChanging();
					this._Proyecto = value;
					this.SendPropertyChanged("Proyecto");
					this.OnProyectoChanged();
				}
			}
		}
		
		[Column(Storage="_Cliente", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Cliente
		{
			get
			{
				return this._Cliente;
			}
			set
			{
				if ((this._Cliente != value))
				{
					if (this._ValorReferencia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClienteChanging(value);
					this.SendPropertyChanging();
					this._Cliente = value;
					this.SendPropertyChanged("Cliente");
					this.OnClienteChanged();
				}
			}
		}
		
		[Column(Storage="_Actividad", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Actividad
		{
			get
			{
				return this._Actividad;
			}
			set
			{
				if ((this._Actividad != value))
				{
					if (this._ValorReferencia2.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActividadChanging(value);
					this.SendPropertyChanging();
					this._Actividad = value;
					this.SendPropertyChanged("Actividad");
					this.OnActividadChanged();
				}
			}
		}
		
		[Column(Storage="_Area", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> Area
		{
			get
			{
				return this._Area;
			}
			set
			{
				if ((this._Area != value))
				{
					if (this._ValorReferencia3.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAreaChanging(value);
					this.SendPropertyChanging();
					this._Area = value;
					this.SendPropertyChanged("Area");
					this.OnAreaChanged();
				}
			}
		}
		
		[Column(Storage="_Descripcion", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[Column(Storage="_Horas", DbType="Float NOT NULL")]
		public double Horas
		{
			get
			{
				return this._Horas;
			}
			set
			{
				if ((this._Horas != value))
				{
					this.OnHorasChanging(value);
					this.SendPropertyChanging();
					this._Horas = value;
					this.SendPropertyChanged("Horas");
					this.OnHorasChanged();
				}
			}
		}
		
		[Column(Storage="_CostoTotal", DbType="Money NOT NULL")]
		public decimal CostoTotal
		{
			get
			{
				return this._CostoTotal;
			}
			set
			{
				if ((this._CostoTotal != value))
				{
					this.OnCostoTotalChanging(value);
					this.SendPropertyChanging();
					this._CostoTotal = value;
					this.SendPropertyChanged("CostoTotal");
					this.OnCostoTotalChanged();
				}
			}
		}
		
		[Association(Name="ValorReferencia_RegistroTiempos", Storage="_ValorReferencia", ThisKey="Cliente", OtherKey="Clave", IsForeignKey=true)]
		public ValorReferencia ValorReferencia
		{
			get
			{
				return this._ValorReferencia.Entity;
			}
			set
			{
				ValorReferencia previousValue = this._ValorReferencia.Entity;
				if (((previousValue != value) 
							|| (this._ValorReferencia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ValorReferencia.Entity = null;
						previousValue.RegistroTiempos.Remove(this);
					}
					this._ValorReferencia.Entity = value;
					if ((value != null))
					{
						value.RegistroTiempos.Add(this);
						this._Cliente = value.Clave;
					}
					else
					{
						this._Cliente = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("ValorReferencia");
				}
			}
		}
		
		[Association(Name="JornadaLaboral_RegistroTiempos", Storage="_JornadaLaboral", ThisKey="FechaInicioJornada", OtherKey="FechaInicioJornada", IsForeignKey=true)]
		public JornadaLaboral JornadaLaboral
		{
			get
			{
				return this._JornadaLaboral.Entity;
			}
			set
			{
				JornadaLaboral previousValue = this._JornadaLaboral.Entity;
				if (((previousValue != value) 
							|| (this._JornadaLaboral.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._JornadaLaboral.Entity = null;
						previousValue.RegistroTiempos.Remove(this);
					}
					this._JornadaLaboral.Entity = value;
					if ((value != null))
					{
						value.RegistroTiempos.Add(this);
						this._FechaInicioJornada = value.FechaInicioJornada;
					}
					else
					{
						this._FechaInicioJornada = default(System.DateTime);
					}
					this.SendPropertyChanged("JornadaLaboral");
				}
			}
		}
		
		[Association(Name="ValorReferencia_RegistroTiempos1", Storage="_ValorReferencia1", ThisKey="Proyecto", OtherKey="Clave", IsForeignKey=true)]
		public ValorReferencia ValorReferencia1
		{
			get
			{
				return this._ValorReferencia1.Entity;
			}
			set
			{
				ValorReferencia previousValue = this._ValorReferencia1.Entity;
				if (((previousValue != value) 
							|| (this._ValorReferencia1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ValorReferencia1.Entity = null;
						previousValue.RegistroTiempos1.Remove(this);
					}
					this._ValorReferencia1.Entity = value;
					if ((value != null))
					{
						value.RegistroTiempos1.Add(this);
						this._Proyecto = value.Clave;
					}
					else
					{
						this._Proyecto = default(System.Guid);
					}
					this.SendPropertyChanged("ValorReferencia1");
				}
			}
		}
		
		[Association(Name="ValorReferencia_RegistroTiempos2", Storage="_ValorReferencia2", ThisKey="Actividad", OtherKey="Clave", IsForeignKey=true)]
		public ValorReferencia ValorReferencia2
		{
			get
			{
				return this._ValorReferencia2.Entity;
			}
			set
			{
				ValorReferencia previousValue = this._ValorReferencia2.Entity;
				if (((previousValue != value) 
							|| (this._ValorReferencia2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ValorReferencia2.Entity = null;
						previousValue.RegistroTiempos2.Remove(this);
					}
					this._ValorReferencia2.Entity = value;
					if ((value != null))
					{
						value.RegistroTiempos2.Add(this);
						this._Actividad = value.Clave;
					}
					else
					{
						this._Actividad = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("ValorReferencia2");
				}
			}
		}
		
		[Association(Name="ValorReferencia_RegistroTiempos3", Storage="_ValorReferencia3", ThisKey="Area", OtherKey="Clave", IsForeignKey=true)]
		public ValorReferencia ValorReferencia3
		{
			get
			{
				return this._ValorReferencia3.Entity;
			}
			set
			{
				ValorReferencia previousValue = this._ValorReferencia3.Entity;
				if (((previousValue != value) 
							|| (this._ValorReferencia3.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ValorReferencia3.Entity = null;
						previousValue.RegistroTiempos3.Remove(this);
					}
					this._ValorReferencia3.Entity = value;
					if ((value != null))
					{
						value.RegistroTiempos3.Add(this);
						this._Area = value.Clave;
					}
					else
					{
						this._Area = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("ValorReferencia3");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.PermisoUsuario")]
	public partial class PermisoUsuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Usuario;
		
		private string _Usuario2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsuarioChanging(string value);
    partial void OnUsuarioChanged();
    partial void OnUsuario2Changing(string value);
    partial void OnUsuario2Changed();
    #endregion
		
		public PermisoUsuario()
		{
			OnCreated();
		}
		
		[Column(Storage="_Usuario", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				if ((this._Usuario != value))
				{
					this.OnUsuarioChanging(value);
					this.SendPropertyChanging();
					this._Usuario = value;
					this.SendPropertyChanged("Usuario");
					this.OnUsuarioChanged();
				}
			}
		}
		
		[Column(Storage="_Usuario2", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Usuario2
		{
			get
			{
				return this._Usuario2;
			}
			set
			{
				if ((this._Usuario2 != value))
				{
					this.OnUsuario2Changing(value);
					this.SendPropertyChanging();
					this._Usuario2 = value;
					this.SendPropertyChanged("Usuario2");
					this.OnUsuario2Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.CostoUsuarioHora")]
	public partial class CostoUsuarioHora : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Usuario;
		
		private decimal _Costo;
		
		private short _HorasSemanales;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsuarioChanging(string value);
    partial void OnUsuarioChanged();
    partial void OnCostoChanging(decimal value);
    partial void OnCostoChanged();
    partial void OnHorasSemanalesChanging(short value);
    partial void OnHorasSemanalesChanged();
    #endregion
		
		public CostoUsuarioHora()
		{
			OnCreated();
		}
		
		[Column(Storage="_Usuario", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Usuario
		{
			get
			{
				return this._Usuario;
			}
			set
			{
				if ((this._Usuario != value))
				{
					this.OnUsuarioChanging(value);
					this.SendPropertyChanging();
					this._Usuario = value;
					this.SendPropertyChanged("Usuario");
					this.OnUsuarioChanged();
				}
			}
		}
		
		[Column(Storage="_Costo", DbType="Money NOT NULL")]
		public decimal Costo
		{
			get
			{
				return this._Costo;
			}
			set
			{
				if ((this._Costo != value))
				{
					this.OnCostoChanging(value);
					this.SendPropertyChanging();
					this._Costo = value;
					this.SendPropertyChanged("Costo");
					this.OnCostoChanged();
				}
			}
		}
		
		[Column(Storage="_HorasSemanales", DbType="SmallInt NOT NULL")]
		public short HorasSemanales
		{
			get
			{
				return this._HorasSemanales;
			}
			set
			{
				if ((this._HorasSemanales != value))
				{
					this.OnHorasSemanalesChanging(value);
					this.SendPropertyChanging();
					this._HorasSemanales = value;
					this.SendPropertyChanged("HorasSemanales");
					this.OnHorasSemanalesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
