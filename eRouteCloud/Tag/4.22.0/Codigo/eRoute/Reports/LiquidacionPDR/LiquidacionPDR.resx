<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="dsProductos.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="customSqlQuery1.Sql" xml:space="preserve">
    <value>SELECT ClaveCEDI, ALMNombre, VendedorId, VENNombre, ProductoClave, TipoUnidad, PRONombre, 
SUM(InvInicial) AS InvInicial, SUM(Recarga) AS Recarga, SUM(CambioEnt) AS CambioEnt, SUM(DevolucionCli) AS DevolucionCli, SUM(Merma) AS Merma, SUM(Descarga) AS Descarga, SUM(Venta) AS Venta, 
SUM((SubTotal- DescCliPor -((SubTotal-DescCliPor) * DescVendPor / 100) ) + (Impuesto-DescCliPorImp-((Impuesto-DescCliPorImp) * DescVendPor / 100))) AS Importe,
SUM((SubTotalCredito- DescCliPorCredito -((SubTotalCredito-DescCliPorCredito) * DescVendPorCredito / 100) ) + (ImpuestoCredito-DescCliPorImpCredito-((ImpuestoCredito-DescCliPorImpCredito) * DescVendPorCredito / 100))) AS ImporteCredito
FROM( 
SELECT AGV.ClaveCEDI, ALM.Nombre as ALMNombre, VEN.VendedorId, VEN.Nombre as VENNombre, 
DIA.FechaCaptura AS FechaHoraAlta, TRP.Tipo, TRP.CFVTipo, TPD.ProductoClave, vd.Descripcion as TipoUnidad, PRO.Nombre AS PRONombre, 
InvInicial = (SELECT CASE WHEN (TRP.Tipo = 2 AND TRP.FechaCaptura = CAR.FechaCaptura) OR TRP.Tipo = 23 THEN TPD.Cantidad ELSE 0 END), 
Recarga = (SELECT CASE WHEN TRP.Tipo = 2 AND TRP.FechaCaptura &gt; CAR.FechaCaptura THEN TPD.Cantidad ELSE 0 END), 
CambioEnt = (SELECT CASE WHEN TRP.Tipo = 9 AND TRP.TipoMovimiento = 1 THEN TPD.Cantidad ELSE 0 END), 
DevolucionCli = (SELECT CASE WHEN TRP.Tipo = 3 AND TRP.TipoFase &lt;&gt; 0 THEN TPD.Cantidad ELSE 0 END),
Merma =(SELECT CASE WHEN TRP.Tipo = 4 AND TRP.TipoFase &lt;&gt; 0 THEN TPD.Cantidad ELSE 0 END), 
Descarga = (SELECT CASE WHEN TRP.Tipo = 7 AND TRP.TipoFase &lt;&gt; 0 THEN TPD.Cantidad ELSE 0 END), 
Venta = (SELECT CASE WHEN TRP.Tipo = 1 AND TPD.Promocion &lt;&gt; 2 THEN TPD.Cantidad ELSE 0 END), 
SubTotal = (SELECT CASE WHEN TRP.Tipo = 1  AND TPD.Total &gt; 0 THEN TPD.Subtotal ELSE 0 END), 
DescCliPor = (SELECT CASE WHEN TRP.Tipo = 1  AND TPD.Total &gt; 0 THEN (SELECT (CASE WHEN SUM(DesImporte) IS NULL THEN 0 ELSE SUM(DesImporte) END) FROM TpdDes AS TDD WHERE TDD.TransProdId = TRP.TransProdId AND TDD.TransProdDetalleId = TPD.TransProdDetalleId) ELSE 0 END), 
DescVendPor = (SELECT CASE WHEN TRP.Tipo = 1 AND TPD.Total &gt; 0 THEN (SELECT CASE WHEN TRP.DescVendPor IS NULL THEN 0 ELSE TRP.DescVendPor END) ELSE 0 END), 
Impuesto = (SELECT CASE WHEN TRP.Tipo = 1  AND TPD.Total &gt; 0 THEN (SELECT CASE WHEN TPD.Impuesto IS NULL THEN 0 ELSE TPD.Impuesto END) ELSE 0 END), 
DescCliPorImp=(SELECT CASE WHEN TRP.Tipo=1  AND TPD.Total&gt;0 THEN (SELECT (CASE WHEN sum(DesImpuesto) IS NULL THEN 0 ELSE sum(DesImpuesto) END) 
FROM TpdDes AS TDD WHERE TDD.TransProdId = TRP.TransProdId AND TDD.TransProdDetalleId = TPD.TransProdDetalleId) ELSE 0 END),
SubTotalCredito = (SELECT CASE WHEN TRP.Tipo = 1 AND TRP.CFVTipo = 2 AND TPD.Total &gt; 0 THEN TPD.Subtotal ELSE 0 END),
DescCliPorCredito = (SELECT CASE WHEN TRP.Tipo = 1 AND TRP.CFVTipo = 2 AND TPD.Total &gt; 0 THEN (SELECT (CASE WHEN SUM(DesImporte) IS NULL THEN 0 ELSE SUM(DesImporte) END) FROM TpdDes AS TDD WHERE TDD.TransProdId = TRP.TransProdId AND TDD.TransProdDetalleId = TPD.TransProdDetalleId) ELSE 0 END), 
DescVendPorCredito = (SELECT CASE WHEN TRP.Tipo = 1 AND TRP.CFVTipo = 2 AND TPD.Total &gt; 0 THEN (SELECT CASE WHEN TRP.DescVendPor IS NULL THEN 0 ELSE TRP.DescVendPor END) ELSE 0 END), 
ImpuestoCredito = (SELECT CASE WHEN TRP.Tipo = 1  AND TRP.CFVTipo = 2 AND TPD.Total &gt; 0 THEN (SELECT CASE WHEN TPD.Impuesto IS NULL THEN 0 ELSE TPD.Impuesto END) ELSE 0 END), 
DescCliPorImpCredito =(SELECT CASE WHEN TRP.Tipo=1  AND TRP.CFVTipo = 2 AND TPD.Total&gt;0 THEN (SELECT (CASE WHEN sum(DesImpuesto) IS NULL THEN 0 ELSE sum(DesImpuesto) END) 
FROM TpdDes AS TDD WHERE TDD.TransProdId = TRP.TransProdId AND TDD.TransProdDetalleId = TPD.TransProdDetalleId) ELSE 0 END)
FROM TransProd AS TRP 
INNER JOIN Dia ON TRP.DiaClave = DIA.DiaClave 
INNER JOIN TransProdDetalle AS TPD ON TPD.TransProdId = TRP.TransProdId 
INNER JOIN Producto AS PRO ON PRO.ProductoClave = TPD.ProductoClave 
INNER JOIN ProductoDetalle AS PDD ON PDD.ProductoClave = TPD.ProductoClave AND PDD.PRUTipoUnidad = TPD.TipoUnidad AND PDD.PRUTipoUnidad = TPD.TipoUnidad AND PDD.ProductoDetClave = TPD.ProductoClave 
INNER JOIN Vendedor AS VEN ON VEN.USUId = TRP.MUsuarioId AND VEN.TipoEstado = 1 AND VEN.Baja = 0 
INNER JOIN (SELECT DiaClave, VendedorId, ClaveCEDI FROM AgendaVendedor GROUP BY DiaClave, VendedorId, ClaveCEDI) as AGV ON AGV.DiaClave=TRP.DiaClave AND AGV.VendedorId=VEN.VendedorId 
INNER JOIN Almacen as ALM ON ALM.Clave=AGV.ClaveCEDI 
INNER JOIN VAVDescripcion vd on vd.VARCodigo='UNIDADV' and vd.VADTipoLenguaje=dbo.FNObtenerLenguaje() and TPD.TipoUnidad=vd.VAVClave 
LEFT JOIN (
	SELECT VEN.VendedorID, MIN(TRP.FechaCaptura) AS FechaCaptura
	FROM TransProd TRP
	INNER JOIN Vendedor VEN ON TRP.MUsuarioID = VEN.USUId
	INNER JOIN Dia ON TRP.DiaClave = Dia.DiaClave
	WHERE TRP.Tipo = 2 AND TRP.TipoFase &lt;&gt; 0
	AND DIA.FechaCaptura = '2018-08-07 00:00:00.000'
	GROUP BY VEN.VendedorID
) AS CAR ON VEN.VendedorID = CAR.VendedorID 
WHERE DIA.FechaCaptura = '2018-08-07 00:00:00.000'
--sCondicionMovs 
AND TRP.Tipo IN (1,2,3,4,7,9,23) AND TRP.TipoFase &lt;&gt; 0 
)AS Liquidacion 
GROUP BY ClaveCEDI, ALMNombre, VendedorId, VENNombre, ProductoClave, TipoUnidad, PRONombre 
ORDER BY ClaveCEDI, ALMNombre, VendedorId, VENNombre, ProductoClave, TipoUnidad </value>
  </data>
  <data name="dsProductos.ResultSchemaSerializable" xml:space="preserve">
    <value>PERhdGFTZXQgTmFtZT0iZHNQcm9kdWN0b3MiPjxWaWV3IE5hbWU9IlF1ZXJ5Ij48RmllbGQgTmFtZT0iQ2xhdmVDRURJIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9IkFMTU5vbWJyZSIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJWZW5kZWRvcklkIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9IlZFTk5vbWJyZSIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJQcm9kdWN0b0NsYXZlIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9IlRpcG9VbmlkYWQiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iUFJPTm9tYnJlIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9IkludkluaWNpYWwiIFR5cGU9IkRvdWJsZSIgLz48RmllbGQgTmFtZT0iUmVjYXJnYSIgVHlwZT0iRG91YmxlIiAvPjxGaWVsZCBOYW1lPSJDYW1iaW9FbnQiIFR5cGU9IkRvdWJsZSIgLz48RmllbGQgTmFtZT0iRGV2b2x1Y2lvbkNsaSIgVHlwZT0iRG91YmxlIiAvPjxGaWVsZCBOYW1lPSJNZXJtYSIgVHlwZT0iRG91YmxlIiAvPjxGaWVsZCBOYW1lPSJEZXNjYXJnYSIgVHlwZT0iRG91YmxlIiAvPjxGaWVsZCBOYW1lPSJWZW50YSIgVHlwZT0iRG91YmxlIiAvPjxGaWVsZCBOYW1lPSJJbXBvcnRlIiBUeXBlPSJEb3VibGUiIC8+PEZpZWxkIE5hbWU9IkltcG9ydGVDcmVkaXRvIiBUeXBlPSJEb3VibGUiIC8+PC9WaWV3PjwvRGF0YVNldD4=</value>
  </data>
</root>