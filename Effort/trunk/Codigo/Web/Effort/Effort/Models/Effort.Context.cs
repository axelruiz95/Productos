//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Effort.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class EffortEntities : DbContext
    {
        public EffortEntities()
            : base("name=EffortEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<configCorreos> configCorreos { get; set; }
        public DbSet<DiasNoHabiles> DiasNoHabiles { get; set; }
        public DbSet<Equipo> Equipo { get; set; }
        public DbSet<Esfuerzo> Esfuerzo { get; set; }
        public DbSet<Estados_tareas> Estados_tareas { get; set; }
        public DbSet<Proyecto> Proyecto { get; set; }
        public DbSet<Riesgos> Riesgos { get; set; }
        public DbSet<Tarea> Tarea { get; set; }
        public DbSet<Tipo_tarea> Tipo_tarea { get; set; }
        public DbSet<Versiones> Versiones { get; set; }
    
        public virtual int equipoIU(string idEquipo, string nombre, string correo, Nullable<int> inv_hrs_dia, Nullable<decimal> costo_hr, string perfil, Nullable<int> estado)
        {
            var idEquipoParameter = idEquipo != null ?
                new ObjectParameter("idEquipo", idEquipo) :
                new ObjectParameter("idEquipo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("correo", correo) :
                new ObjectParameter("correo", typeof(string));
    
            var inv_hrs_diaParameter = inv_hrs_dia.HasValue ?
                new ObjectParameter("inv_hrs_dia", inv_hrs_dia) :
                new ObjectParameter("inv_hrs_dia", typeof(int));
    
            var costo_hrParameter = costo_hr.HasValue ?
                new ObjectParameter("costo_hr", costo_hr) :
                new ObjectParameter("costo_hr", typeof(decimal));
    
            var perfilParameter = perfil != null ?
                new ObjectParameter("perfil", perfil) :
                new ObjectParameter("perfil", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("equipoIU", idEquipoParameter, nombreParameter, correoParameter, inv_hrs_diaParameter, costo_hrParameter, perfilParameter, estadoParameter);
        }
    
        public virtual int insertarEsfuerzo(string idEquipo, Nullable<int> idTarea, Nullable<double> consumoHrs, Nullable<System.DateTime> fecha, string comentarios, Nullable<int> idEstado, Nullable<int> avanceTarea)
        {
            var idEquipoParameter = idEquipo != null ?
                new ObjectParameter("idEquipo", idEquipo) :
                new ObjectParameter("idEquipo", typeof(string));
    
            var idTareaParameter = idTarea.HasValue ?
                new ObjectParameter("idTarea", idTarea) :
                new ObjectParameter("idTarea", typeof(int));
    
            var consumoHrsParameter = consumoHrs.HasValue ?
                new ObjectParameter("consumoHrs", consumoHrs) :
                new ObjectParameter("consumoHrs", typeof(double));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var comentariosParameter = comentarios != null ?
                new ObjectParameter("comentarios", comentarios) :
                new ObjectParameter("comentarios", typeof(string));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("idEstado", idEstado) :
                new ObjectParameter("idEstado", typeof(int));
    
            var avanceTareaParameter = avanceTarea.HasValue ?
                new ObjectParameter("avanceTarea", avanceTarea) :
                new ObjectParameter("avanceTarea", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertarEsfuerzo", idEquipoParameter, idTareaParameter, consumoHrsParameter, fechaParameter, comentariosParameter, idEstadoParameter, avanceTareaParameter);
        }
    
        public virtual int modificarEsfuerzo(Nullable<int> idTarea, Nullable<double> consumoHrs, Nullable<System.DateTime> fecha, Nullable<int> idEstado, string comentarios)
        {
            var idTareaParameter = idTarea.HasValue ?
                new ObjectParameter("idTarea", idTarea) :
                new ObjectParameter("idTarea", typeof(int));
    
            var consumoHrsParameter = consumoHrs.HasValue ?
                new ObjectParameter("consumoHrs", consumoHrs) :
                new ObjectParameter("consumoHrs", typeof(double));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("idEstado", idEstado) :
                new ObjectParameter("idEstado", typeof(int));
    
            var comentariosParameter = comentarios != null ?
                new ObjectParameter("comentarios", comentarios) :
                new ObjectParameter("comentarios", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("modificarEsfuerzo", idTareaParameter, consumoHrsParameter, fechaParameter, idEstadoParameter, comentariosParameter);
        }
    
        public virtual int proyectosIU(string idProyecto, string nombre, Nullable<System.DateTime> fecha, Nullable<int> duracion, Nullable<double> pre_hrs, Nullable<decimal> pre_precio, string administrador, Nullable<int> estadoProyecto)
        {
            var idProyectoParameter = idProyecto != null ?
                new ObjectParameter("idProyecto", idProyecto) :
                new ObjectParameter("idProyecto", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("fecha", fecha) :
                new ObjectParameter("fecha", typeof(System.DateTime));
    
            var duracionParameter = duracion.HasValue ?
                new ObjectParameter("duracion", duracion) :
                new ObjectParameter("duracion", typeof(int));
    
            var pre_hrsParameter = pre_hrs.HasValue ?
                new ObjectParameter("pre_hrs", pre_hrs) :
                new ObjectParameter("pre_hrs", typeof(double));
    
            var pre_precioParameter = pre_precio.HasValue ?
                new ObjectParameter("pre_precio", pre_precio) :
                new ObjectParameter("pre_precio", typeof(decimal));
    
            var administradorParameter = administrador != null ?
                new ObjectParameter("administrador", administrador) :
                new ObjectParameter("administrador", typeof(string));
    
            var estadoProyectoParameter = estadoProyecto.HasValue ?
                new ObjectParameter("EstadoProyecto", estadoProyecto) :
                new ObjectParameter("EstadoProyecto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("proyectosIU", idProyectoParameter, nombreParameter, fechaParameter, duracionParameter, pre_hrsParameter, pre_precioParameter, administradorParameter, estadoProyectoParameter);
        }
    
        public virtual ObjectResult<reporte_comentarios_Result> reporte_comentarios(Nullable<int> idT)
        {
            var idTParameter = idT.HasValue ?
                new ObjectParameter("idT", idT) :
                new ObjectParameter("idT", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<reporte_comentarios_Result>("reporte_comentarios", idTParameter);
        }
    
        public virtual ObjectResult<reporte_diagrama_gantt_Result> reporte_diagrama_gantt(string idproyecto)
        {
            var idproyectoParameter = idproyecto != null ?
                new ObjectParameter("idproyecto", idproyecto) :
                new ObjectParameter("idproyecto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<reporte_diagrama_gantt_Result>("reporte_diagrama_gantt", idproyectoParameter);
        }
    
        public virtual ObjectResult<reporte_equipo_proyecto_Result> reporte_equipo_proyecto()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<reporte_equipo_proyecto_Result>("reporte_equipo_proyecto");
        }
    
        public virtual ObjectResult<reporte_esfuerzo_proyecto_Result> reporte_esfuerzo_proyecto(string idproyecto)
        {
            var idproyectoParameter = idproyecto != null ?
                new ObjectParameter("idproyecto", idproyecto) :
                new ObjectParameter("idproyecto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<reporte_esfuerzo_proyecto_Result>("reporte_esfuerzo_proyecto", idproyectoParameter);
        }
    
        public virtual ObjectResult<reporte_esfuerzo_tarea_Result> reporte_esfuerzo_tarea(Nullable<int> idT)
        {
            var idTParameter = idT.HasValue ?
                new ObjectParameter("idT", idT) :
                new ObjectParameter("idT", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<reporte_esfuerzo_tarea_Result>("reporte_esfuerzo_tarea", idTParameter);
        }
    
        public virtual ObjectResult<reporte_Risk_Result> reporte_Risk(string idProyecto, Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta)
        {
            var idProyectoParameter = idProyecto != null ?
                new ObjectParameter("idProyecto", idProyecto) :
                new ObjectParameter("idProyecto", typeof(string));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("desde", desde) :
                new ObjectParameter("desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("hasta", hasta) :
                new ObjectParameter("hasta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<reporte_Risk_Result>("reporte_Risk", idProyectoParameter, desdeParameter, hastaParameter);
        }
    
        public virtual ObjectResult<reporte_timesheet_Result> reporte_timesheet(string idProyecto, Nullable<System.DateTime> desde, Nullable<System.DateTime> hasta)
        {
            var idProyectoParameter = idProyecto != null ?
                new ObjectParameter("idProyecto", idProyecto) :
                new ObjectParameter("idProyecto", typeof(string));
    
            var desdeParameter = desde.HasValue ?
                new ObjectParameter("desde", desde) :
                new ObjectParameter("desde", typeof(System.DateTime));
    
            var hastaParameter = hasta.HasValue ?
                new ObjectParameter("hasta", hasta) :
                new ObjectParameter("hasta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<reporte_timesheet_Result>("reporte_timesheet", idProyectoParameter, desdeParameter, hastaParameter);
        }
    
        public virtual int tareaIU(Nullable<int> idTarea, string titulo, string descripcion, Nullable<double> presupuesto, Nullable<double> hrsEstimadaDia, Nullable<int> idTipo, string idProyecto, string idEquipo, Nullable<int> idEstado, Nullable<int> idVersion, Nullable<int> predecesora, Nullable<System.DateTime> fecha_inicio, Nullable<System.DateTime> fecha_fin)
        {
            var idTareaParameter = idTarea.HasValue ?
                new ObjectParameter("idTarea", idTarea) :
                new ObjectParameter("idTarea", typeof(int));
    
            var tituloParameter = titulo != null ?
                new ObjectParameter("titulo", titulo) :
                new ObjectParameter("titulo", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var presupuestoParameter = presupuesto.HasValue ?
                new ObjectParameter("presupuesto", presupuesto) :
                new ObjectParameter("presupuesto", typeof(double));
    
            var hrsEstimadaDiaParameter = hrsEstimadaDia.HasValue ?
                new ObjectParameter("hrsEstimadaDia", hrsEstimadaDia) :
                new ObjectParameter("hrsEstimadaDia", typeof(double));
    
            var idTipoParameter = idTipo.HasValue ?
                new ObjectParameter("idTipo", idTipo) :
                new ObjectParameter("idTipo", typeof(int));
    
            var idProyectoParameter = idProyecto != null ?
                new ObjectParameter("idProyecto", idProyecto) :
                new ObjectParameter("idProyecto", typeof(string));
    
            var idEquipoParameter = idEquipo != null ?
                new ObjectParameter("idEquipo", idEquipo) :
                new ObjectParameter("idEquipo", typeof(string));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("idEstado", idEstado) :
                new ObjectParameter("idEstado", typeof(int));
    
            var idVersionParameter = idVersion.HasValue ?
                new ObjectParameter("idVersion", idVersion) :
                new ObjectParameter("idVersion", typeof(int));
    
            var predecesoraParameter = predecesora.HasValue ?
                new ObjectParameter("predecesora", predecesora) :
                new ObjectParameter("predecesora", typeof(int));
    
            var fecha_inicioParameter = fecha_inicio.HasValue ?
                new ObjectParameter("fecha_inicio", fecha_inicio) :
                new ObjectParameter("fecha_inicio", typeof(System.DateTime));
    
            var fecha_finParameter = fecha_fin.HasValue ?
                new ObjectParameter("fecha_fin", fecha_fin) :
                new ObjectParameter("fecha_fin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("tareaIU", idTareaParameter, tituloParameter, descripcionParameter, presupuestoParameter, hrsEstimadaDiaParameter, idTipoParameter, idProyectoParameter, idEquipoParameter, idEstadoParameter, idVersionParameter, predecesoraParameter, fecha_inicioParameter, fecha_finParameter);
        }
    
        public virtual ObjectResult<TareaPorEquipo_Result> TareaPorEquipo(string idProyecto, string idEquipo, Nullable<int> idEstado)
        {
            var idProyectoParameter = idProyecto != null ?
                new ObjectParameter("idProyecto", idProyecto) :
                new ObjectParameter("idProyecto", typeof(string));
    
            var idEquipoParameter = idEquipo != null ?
                new ObjectParameter("idEquipo", idEquipo) :
                new ObjectParameter("idEquipo", typeof(string));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("idEstado", idEstado) :
                new ObjectParameter("idEstado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TareaPorEquipo_Result>("TareaPorEquipo", idProyectoParameter, idEquipoParameter, idEstadoParameter);
        }
    }
}
